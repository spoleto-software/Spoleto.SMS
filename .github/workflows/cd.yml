name: Publish Packages

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

    # - name: Publish Spoleto.SMS to Nuget
    #   uses: alirezanet/publish-nuget@v3.0.4
    #   with:
    #       # Filepath of the project to be packaged, relative to root of repository
    #       PROJECT_FILE_PATH: src/Spoleto.Sms.Providers/Spoleto.Sms.Providers.csproj
    #       # API key to authenticate with NuGet server
    #       NUGET_KEY: ${{secrets.NUGET_API_KEY}}
    #       # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
    #       INCLUDE_SYMBOLS: true
    #       # Flag to toggle git tagging, enabled by default
    #       TAG_COMMIT: false

      - name: Pack Spoleto.SMS
        run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/Spoleto.SMS/Spoleto.SMS.csproj -o .
      # - name: Pack SMS.Net.RavenSMS
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/SmsDeliveryChannels/SMS.Net.RavenSMS/SMS.Net.RavenSMS.csproj -o .
      # - name: Pack SMS.Net.Avochato
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/SmsDeliveryChannels/SMS.Net.Avochato/SMS.Net.Avochato.csproj -o .
      # - name: Pack SMS.Net.MessageBird
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/SmsDeliveryChannels/SMS.Net.MessageBird/SMS.Net.MessageBird.csproj -o .
      # - name: Pack SMS.Net.Twilio
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/SmsDeliveryChannels/SMS.Net.Twilio/SMS.Net.Twilio.csproj -o .

      # - name: Pack SMS.Net.DependencyInjection
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/DependencyInjection/SMS.Net.DependencyInjection/SMS.Net.DependencyInjection.csproj -o .
      # - name: Pack SMS.Net.Avochato.DependencyInjection
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/DependencyInjection/SMS.Net.Avochato.DependencyInjection/SMS.Net.Avochato.DependencyInjection.csproj -o .
      # - name: Pack SMS.Net.MessageBird.DependencyInjection
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/DependencyInjection/SMS.Net.MessageBird.DependencyInjection/SMS.Net.MessageBird.DependencyInjection.csproj -o .
      # - name: Pack SMS.Net.Twilio.DependencyInjection
      #   run: dotnet pack --include-symbols -p:SymbolPackageFormat=snupkg --no-build -c Release src/DependencyInjection/SMS.Net.Twilio.DependencyInjection/SMS.Net.Twilio.DependencyInjection.csproj -o .

      - name: Push packages
        run: dotnet nuget push *.nupkg --api-key ${{secrets.NUGET_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Upload assets to release
        run: |
          chmod +x ./publish-assets-to-github.sh
          ./publish-assets-to-github.sh ${{ github.event.release.tag_name }}

